define(["exports"],function(e){"use strict";class t{constructor(){this._resolveFunc=null,this._rejectFunc=null,this._webRtcStarted=!1,this._roomName="WebRTCHelper",this._listener=null,this._isCaller=!1,this._debug=!1,this._uuid="",this._peerConnectionConfig={iceServers:[{urls:"stun:stun.stunprotocol.org:3478"},{urls:"stun:stun.l.google.com:19302"}]},this._dataChannelOptions={},this._uuid=this._createUUID()}init(e){return e=e||{},this.debug(e.debug),this.messaging(e.messaging),this.peerConnectionConfig(e.peerConnectionConfig),this.dataChannelOptions(e.dataChannelOptions),this.eventListener(e.eventListener),this.room(e.room),this._makePromise()}debug(e){return"boolean"==typeof e&&(this._debug=e),this._debug}_issueEvent(e){this._debug&&console.log("_issueEvent(event) "+JSON.stringify(e)),this._listener&&this._listener(e.err,e)}_start(e){this._webRtcStarted=!0,this._isCaller=e;let t=this;if(this._issueEvent({event:"webRtcStarting",caller:e,room:this._roomName}),this._peerConnection=new RTCPeerConnection(this._peerConnectionConfig),this._peerConnection.onicecandidate=(e=>{t._gotIceCandidate(e)}),e){let e=this._dataChannelOptions.label||this._roomName,t=this;this._dataChannel=this._peerConnection.createDataChannel(e,this._dataChannelOptions),this._setupDataChannel(),this._peerConnection.createOffer().then(e=>t._createdDescription(e)).catch(e=>t._errorHandler(e))}else this._peerConnection.ondatachannel=(e=>{this._dataChannel=e.channel,this._setupDataChannel()})}_errorHandler(e){this._debug&&console.log(e),this._reject(e),this._issueEvent({err:e})}dataChannel(){return this._dataChannel}_setupDataChannel(){this._dataChannel.onopen=(()=>{this._resolve(this),this._issueEvent({event:"dataChannelOpen",dataChannel:this._dataChannel,err:!1})}),this._dataChannel.onclose=(()=>this._issueEvent({event:"dataChannelClose",dataChannel:this._dataChannel,err:!1})),this._dataChannel.onmessage=(e=>this._issueEvent({event:"dataChannelMessage",data:e,err:!1})),this._dataChannel.onerror=(e=>this._issueEvent({event:"dataChannelError",err:e}))}_gotMessageFromServer(e){this._debug&&console.log(e),this._peerConnection||this._start(!1);let t=e;if(t.uuid==this._uuid)return;let n=this;t.sdp?this._peerConnection.setRemoteDescription(new RTCSessionDescription(t.sdp)).then(()=>{"offer"==t.sdp.type&&n._peerConnection.createAnswer().then(e=>n._createdDescription(e)).catch(e=>n._errorHandler(e))}).catch(e=>n._errorHandler(e)):t.ice&&this._peerConnection.addIceCandidate(new RTCIceCandidate(t.ice)).catch(e=>n._errorHandler(e))}_gotIceCandidate(e){null!=e.candidate&&this._send({ice:e.candidate,uuid:this._uuid})}send(e){if(!this._dataChannel)throw"Data channel does not exist";this._dataChannel.send(e)}_send(e){this._roomName&&(e.rooms=this._roomName),t._messaging.send(e)}_createdDescription(e){this._debug&&(console.log("Got description"),console.log(e));let t=this;this._peerConnection.setLocalDescription(e).then(()=>{t._send({sdp:t._peerConnection.localDescription,uuid:t._uuid})}).catch(t._errorHandler)}_createUUID(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}_onMessageEvent(e,n){if(!e)switch(n.event){case"message":this._issueEvent({event:"messageFromServer",message:n.message}),this._gotMessageFromServer(n.message);break;case"joined":if(this._webRtcStarted)return;const e=n.clients.length;if(e>=3)return void this._issueEvent({err:"roomIsFull"});if(2!==e)return;let s=!(t._messaging.id()===n.client);console.log(this),this._start(s)}}started(){return this._webRtcStarted}_makePromise(){return new Promise((e,t)=>{this._resolveFunc=e,this._rejectFunc=t})}_clearCallback(){this._resolveFunc=null,this._rejectFunc=null}_resolve(e){let t=this._resolveFunc;this._clearCallback(),null!==t&&t(e)}_reject(e){let t=this._rejectFunc;this._clearCallback(),null!==t&&t(e)}eventListener(e){let t=this._listener;return void 0!==e&&(this._listener=e),t}dataChannelOptions(e){let t=this._dataChannelOptions;return void 0!==e&&(this._dataChannelOptions=e),t}peerConnectionConfig(e){let t=this._peerConnectionConfig;return void 0!==e&&(this._peerConnectionConfig=e),t}messaging(e){let n=t._messaging;if(void 0!==e&&(t._messaging=e),t._messaging){let e=this;t._messaging.setEventListener((t,n)=>{e._onMessageEvent(t,n)})}return n}room(e){let t=this._roomName;return void 0!==e&&(this._roomName=e),t}close(){this._clearCallback(),this.messaging(null),this.peerConnectionConfig(null),this.dataChannelOptions(null),this.eventListener(null)}}e.WebRTCHelper=t,e.createWebRTCHelper=async function(e){const n=new t;return await n.init(e||{})},Object.defineProperty(e,"__esModule",{value:!0})});